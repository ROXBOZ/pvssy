.heading-area {
  @include grid;
  max-height: fit-content;

  gap: 0 $reg-space;

  * {
    font-family: $font-logo;
    grid-column: #{$grid-fullwidth};
    height: fit-content;
  }

  h1 {
    margin-top: 5vh;
  }
  h2 {
    margin-top: 10vh;
  }
}

h1 {
  font-family: $font-logo;
}

h2,
h3 {
  font-feature-settings: "ss02";
}

h2 + h3 {
  margin-top: 0;
}

p,
li {
  margin-top: 0;
  max-width: $chperline;
  font-feature-settings: "ss02";
  &.pretitle {
    text-transform: lowercase;
    border-bottom: $tierary $border-solid;

    padding-bottom: 0;
    margin-bottom: 0;
    max-width: fit-content;
    font-size: $smaller-text;
    & + h1,
    & + h2,
    & + h3 {
      margin-top: 0;
      padding-top: 0.25em;
    }
  }
}

li {
  margin-top: $sm-space;
}

.subtitle {
  font-size: 120%;
  max-width: $chperline;
}
h1 + .subtitle,
h2 + .subtitle,
h3 + .subtitle,
h4 + .subtitle {
  border-bottom: $border-solid $secondary;
  padding-bottom: $reg-space;
  margin-bottom: $reg-space;
}
h1 + .subtitle {
  font-size: 140%;
}

h2 + .subtitle {
  font-size: 130%;
}

h3 + .subtitle {
  font-size: 120%;
}

h4 + .subtitle {
  color: red;
  font-size: 110%;
}

u {
  text-decoration: none;
  border-bottom: $border-solid $quarterary;
}

li {
  list-style-type: disc;
}

a {
  font-feature-settings: "ss02";
  text-decoration: none;
  color: $txt-color;
  border-bottom: $border-solid $quarterary;
  font-family: $font-bold;
  width: fit-content;
  transition: border-color $animation-transition;
  cursor: url("../assets/images/cursor-pointer.svg"), auto;

  &:hover {
    border-color: transparent;
  }
}

sup {
  font-size: 60%;
}

hr {
  margin: $reg-space 0;
  height: 1px;
  background-color: $txt-color;
  border: none;
}

.highlight {
  padding: $padding-btn;
  background-color: $quarterary;
  border-radius: $border-radius;
}

figcaption {
  text-align: center;
  margin-top: $sm-space;

  font-size: $smaller-text;
  display: block;
  width: 100%;
}

@media screen and (max-width: map-get($breakpoints, "sm")) {
  .heading-area {
    * {
      grid-column: 1/10;
    }
  }

  h1,
  h2,
  h3,
  h4,
  p,
  span {
    max-width: 100vw;
  }
}

/*-----Ratio Scale-----*/

$type-ratios: (
  "majorThird": 1.25,
  "perfectFourth": 1.333,
  "augmentedFourth": 1.414,
  "perfectFifth": 1.5,
  "goldenRatio": 1.618,
);

@function type-ratio($key) {
  @return map-get($type-ratios, $key);
}

$type-base-size: 1rem;
$type-size-ratio: type-ratio("augmentedFourth");
$type-levels: 4, 3, 2, 1;
$type-styles: ();
$level-size: $type-base-size;
@each $level in $type-levels {
  $level-size: $level-size * $type-size-ratio;
  $type-styles: map-merge($type-styles, (#{"h"}$level: $level-size));

  h#{$level},
  .h#{$level} {
    font-size: $level-size;
    line-height: calc(2px + 2ex + 2px);
    font-weight: 500;
    margin-top: calc(#{$level-size}* 1.25);
    margin-bottom: calc(#{$level-size}/ 2);

    .logo {
      text-transform: lowercase !important;

      &:first-letter {
        text-transform: lowercase !important;
      }
    }

    &:first-letter {
      text-transform: capitalize;
    }

    @if ($type-size-ratio > 1.2) {
      $level-unitless: $level-size / ($level-size * 0 + 1);
      $fluid-reduction: if($level-size > 4, 0.5, 0.33);
      $fluid-min: $level-unitless - ($fluid-reduction * $level-unitless);
      $fluid-min: if($fluid-min > $type-base-size, $fluid-min, 1);
      $fluid-scaler: ($level-unitless - $fluid-min) + 4vw;

      font-size: clamp(
        #{$fluid-min}rem,
        #{$fluid-scaler} + 0.5rem,
        #{$level-size}
      );
    }
  }
}

@function type-style($key) {
  @return map-get($type-styles, $key);
}
